{"version":3,"sources":["extensions/spfxSideNavigation/components/SideNav/SideNavNode.tsx"],"names":[],"mappings":"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","file":"extensions/spfxSideNavigation/components/SideNav/SideNavNode.js","sourcesContent":["import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport ISideNavNodeProps from \"./model/ISideNavNodeProps\";\nimport ISideNavNodeState from \"./model/ISideNavNodeState\";\nimport ISideNavItem from \"./model/ISideNavItem\";\nimport { IconButton } from \"office-ui-fabric-react/lib/Button\";\nrequire(\"./site-menu.scss\");\n\nexport default class SideNavNode extends React.Component<\n  ISideNavNodeProps,\n  ISideNavNodeState\n> {\n  constructor(props: ISideNavNodeProps) {\n    super(props);\n    this.state = {\n      isOpened: false\n    };\n    this.nodeClick = this.nodeClick.bind(this);\n  }\n\n  public render(): JSX.Element {\n    const nodeClasses: string[] = [\"site-nav-node\"];\n    if (this.state.isOpened && this.props.navIsOpened) {\n      nodeClasses.push(\"opened\");\n    }\n    if (this.props.siteNavItem.subNavItems) {\n      nodeClasses.push(\"dropdown\");\n    }\n    return (\n      <div key={this.props.key} className={nodeClasses.join(\" \")}>\n        <div role=\"menu\" onClick={e => this.nodeClick(e)}>\n          {(this.props.siteNavItem.svg && (\n            <div className=\"icon-node ms-fadeIn400\">\n              <div\n                className=\"icon ms-fadeIn400\"\n                style={{ maxWidth: 50, color: \"#fff\" }}\n                dangerouslySetInnerHTML={{ __html: this.props.siteNavItem.svg }}\n              />\n              {this.props.navIsOpened && (\n                <div>\n                  <div className=\"title noselect\">\n                    {this.props.siteNavItem.title}\n                  </div>\n                  {(this.props.siteNavItem.subNavItems &&\n                    !this.state.isOpened && (\n                      <IconButton\n                        className=\"sub-nav-item-icon\"\n                        checked={false}\n                        iconProps={{ iconName: \"ChevronDownSmall\" }}\n                        title=\"Toggle Sub Menu\"\n                        ariaLabel=\"Toggle Sub Menu\"\n                      />\n                    )) ||\n                    (this.props.siteNavItem.subNavItems &&\n                      this.state.isOpened && (\n                        <IconButton\n                          className=\"sub-nav-item-icon\"\n                          checked={false}\n                          iconProps={{ iconName: \"ChevronUpSmall\" }}\n                          title=\"Toggle Sub Menu\"\n                          ariaLabel=\"Toggle Sub Menu\"\n                        />\n                      ))}\n                </div>\n              )}\n            </div>\n          )) ||\n            (!this.props.siteNavItem.svg && (\n              <div className=\"title-node\">\n                <div>\n                  <div className=\"title noselect\">\n                    {this.props.siteNavItem.title}\n                  </div>\n                </div>\n              </div>\n            ))}\n        </div>\n        {(this.props.siteNavItem.subNavItems &&\n          !this.props.navIsOpened && (\n            <div className=\"dynamic-children flyouts\">\n              {this.props.siteNavItem.subNavItems.map(this.renderSubNavItems)}\n            </div>\n          )) ||\n          (this.props.siteNavItem.subNavItems &&\n            this.props.navIsOpened &&\n            this.state.isOpened && (\n              <div className=\"dynamic-children\" ref=\"children\">\n                {this.props.siteNavItem.subNavItems.map(this.renderSubNavItems)}\n              </div>\n            ))}\n      </div>\n    );\n  }\n\n  private check(): void {\n    const node: Element = ReactDOM.findDOMNode(this.refs.children) as Element;\n    if (!node) {\n      return;\n    }\n\n    const rect: ClientRect = node.getBoundingClientRect();\n    const space: number = window.innerHeight - (rect.top + rect.height);\n    if (space < 0) {\n      // it's off screen\n      const heightStyle: string =\n        \"height: \" + String(node.clientHeight + space) + \"px;\";\n      const overflowStyle: string = \"overflow-y: auto; -webkit-overflow-scrolling: touch;\";\n      node.setAttribute(\"style\", heightStyle + overflowStyle);\n    } else {\n      node.setAttribute(\"style\", \"height: auto;\");\n    }\n  }\n\n  private nodeClick(e: React.MouseEvent<HTMLDivElement>): void {\n    if (!this.props.siteNavItem) {\n      return;\n    }\n    if (this.props.siteNavItem.url) {\n      /* if has a url navigate to that address */\n      if (this.props.siteNavItem.openInNewWindow) {\n        window.open(this.props.siteNavItem.url, \"_blank\");\n      } else {\n        window.location.href = this.props.siteNavItem.url;\n      }\n      return;\n    }\n    if (!this.props.siteNavItem.url) {\n      /* if no url then change the state */\n\n      if (this.props.navIsOpened) {\n        /* only change state if the navigation is opened */\n        this.setState(\n          {\n            isOpened: !this.state.isOpened\n          },\n          () => this.check()\n        );\n      }\n      return;\n    }\n  }\n\n  private renderSubNavItems = (\n    siteNavItem: ISideNavItem,\n    index: number\n  ): JSX.Element => {\n    return (\n      <SideNavNode\n        key={index}\n        siteNavItem={siteNavItem}\n        navIsOpened={this.props.navIsOpened}\n      />\n    );\n  };\n}\n"],"sourceRoot":"..\\..\\..\\..\\..\\src"}