{"version":3,"sources":["extensions/spfxSideNavigation/SpfxSideNavigationApplicationCustomizer.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;AACA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,KAAK,QAAQ,MAAM,WAAW,CAAC;AACtC,OAAO,EAAE,QAAQ,EAAE,MAAM,uBAAuB,CAAC;AACjD,OAAO,EACL,yBAAyB,EAEzB,eAAe,EAChB,MAAM,gCAAgC,CAAC;AACxC,OAAO,EAAE,KAAK,IAAI,QAAQ,EAAE,MAAM,aAAa,CAAC;AAChD,OAAO,OAAO,MAAM,8BAA8B,CAAC;AAMnD,qFAAqF;AACrF;IACU,2DAA6E;IADvF;;IAqCA,CAAC;IA/BU,wDAAM,GAAb;QADA,iBAWC;QATC,MAAM,CAAC,iBAAM,MAAM,WAAE,CAAC,IAAI,CAAC,UAAA,CAAC;YAC1B,QAAQ,CAAC;gBACP,WAAW,EAAE,KAAI,CAAC,OAAO;aAC1B,CAAC,CAAC;YACH,KAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,YAAY,CAAC,GAAG,CAC/C,KAAI,EACJ,KAAI,CAAC,kBAAkB,CACxB,CAAC;QACJ,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,oEAAkB,GAA1B;QACE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;YACzB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,gBAAgB,CACrE,eAAe,CAAC,GAAG,CACpB,CAAC;YAEF,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;gBACzB,MAAM,CAAC;YACT,CAAC;YAED,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC,CAAC;gBACnC,IAAM,OAAO,GAA2B,KAAK,CAAC,aAAa,CACzD,OAAO,EACP,EAAE,CACH,CAAC;gBACF,QAAQ,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC;YAC3D,CAAC;QACH,CAAC;IACH,CAAC;IA9BD;QADC,QAAQ;yEAWR;IAqBL,8CAAC;CArCD,AAqCC,CApCS,yBAAyB,GAoClC;eArCoB,uCAAuC","file":"extensions/spfxSideNavigation/SpfxSideNavigationApplicationCustomizer.js","sourcesContent":["\nimport * as React from \"react\";\nimport * as ReactDom from \"react-dom\";\nimport { override } from '@microsoft/decorators';\nimport {\n  BaseApplicationCustomizer,\n  PlaceholderContent,\n  PlaceholderName\n} from \"@microsoft/sp-application-base\";\nimport { setup as pnpSetup } from \"@pnp/common\";\nimport SideNav from \"./components/SideNav/SideNav\";\n\n// import * as strings from 'SpfxSideNavigationApplicationCustomizerStrings';\n\nexport interface ISpfxSideNavigationApplicationCustomizerProperties {}\n\n/** A Custom Action which can be run during execution of a Client Side Application */\nexport default class SpfxSideNavigationApplicationCustomizer\n  extends BaseApplicationCustomizer<ISpfxSideNavigationApplicationCustomizerProperties> {\n\n    private topPlaceholder: PlaceholderContent | undefined;\n\n    @override\n    public onInit(): Promise<void> {\n      return super.onInit().then(_ => {\n        pnpSetup({\n          spfxContext: this.context\n        });\n        this.context.placeholderProvider.changedEvent.add(\n          this,\n          this.renderPlaceHolders\n        );\n      });\n    }\n\n    private renderPlaceHolders(): void {\n      if (!this.topPlaceholder) {\n        this.topPlaceholder = this.context.placeholderProvider.tryCreateContent(\n          PlaceholderName.Top\n        );\n\n        if (!this.topPlaceholder) {\n          return;\n        }\n\n        if (this.topPlaceholder.domElement) {\n          const element: React.ReactElement<{}> = React.createElement(\n            SideNav,\n            {}\n          );\n          ReactDom.render(element, this.topPlaceholder.domElement);\n        }\n      }\n    }\n}\n"],"sourceRoot":"..\\..\\..\\src"}